#ifndef GOSU_BUTTONSX_HPP
#define GOSU_BUTTONSX_HPP

namespace Gosu
{
    //! List of button ids that can be used with Gosu::Input.
    //! This enumeration contains ids for keyboard keys (kb*),
    //! mouse buttons and mouse wheel (ms*) and gamepad buttons (gp*).
    enum ButtonName
    {
        kbRangeBegin = 0x00,
        // Define constants based on positions on the QWERTY keyboard
        // Using decimal because it's easier to read.
        //24-33 - First row
        //38-46 - Second row
        //52-58 - Third row
        // TODO: Create constants for special symbol keys, like Period, or Slash
        kbA = 38,
        kbB = 56,
        kbC = 54,
        kbD = 40,
        kbE = 26,
        kbF = 41,
        kbG = 42,
        kbH = 43,
        kbI = 31,
        kbJ = 44,
        kbK = 45,
        kbL = 46,
        kbM = 58,
        kbN = 57,
        kbO = 32,
        kbP = 33,
        kbQ = 24,
        kbR = 27,
        kbS = 39,
        kbT = 28,
        kbU = 30,
        kbV = 55,
        kbW = 25,
        kbX = 53,
        kbY = 29,
        kbZ = 52,
        
        // all constants are keysymbols.  convert all to keycodes
        kbEscape = 9,// XK_Escape
        kbF1 = 67,//XK_F1,
        kbF2 = 68,//XK_F2,
        kbF3 = 69,//XK_F3,
        kbF4 = 70,//XK_F4,
        kbF5 = 71,//XK_F5,
        kbF6 = 72,//XK_F6,
        kbF7 = 73,//XK_F7,
        kbF8 = 74,//XK_F8,
        kbF9 = 75,//XK_F9,
        kbF10 = 76,//XK_F10,
        kbF11 = 95,//XK_F11,
        kbF12 = 96,//XK_F12,
        kb1 = 10,//XK_1,
        kb2 = 11,//XK_2,
        kb3 = 12,//XK_3,
        kb4 = 13,//XK_4,
        kb5 = 14,//XK_5,
        kb6 = 15,//XK_6,
        kb7 = 16,//XK_7,
        kb8 = 17,//XK_8,
        kb9 = 18,//XK_9,
        kb0 = 19,//XK_0,
        kbTab = 23,//XK_Tab,
        kbReturn = 36,//XK_Return,
        kbSpace = 65,//XK_space,
        kbLeftShift = 50,//XK_Shift_L,
        kbRightShift = 62,//XK_Shift_R,
        kbLeftControl = 37,//XK_Control_L,
        kbRightControl = 105,//XK_Control_R,
        kbLeftAlt = 64,//XK_Alt_L,
        kbRightAlt = 108,//XK_Alt_R,
        kbLeftMeta = 133,//XK_Meta_L,
        kbRightMeta = 134,//XK_Meta_R,
        kbBackspace = 22,//XK_BackSpace,
        kbLeft = 113,//XK_Left,
        kbRight = 114,//XK_Right,
        kbUp = 111,//XK_Up,
        kbDown = 116,//XK_Down,
        kbHome = 110,//XK_Home,
        kbEnd = 115,//XK_End,
        kbInsert = 118,//XK_Insert,
        kbDelete = 119,//XK_Delete,
        kbPageUp = 112,//XK_Prior,
        kbPageDown = 117,//XK_Next,
        kbEnter = 104,//XK_KP_Enter,
        kbMenu = 135,// Key on the right side of keyboard, by right meta.  Brings up right click menu.
        kbNumpad1 = 87,//XK_KP_1,
        kbNumpad2 = 89,//XK_KP_2,
        kbNumpad3 = 89,//XK_KP_3,
        kbNumpad4 = 83,//XK_KP_4,
        kbNumpad5 = 84,//XK_KP_5,
        kbNumpad6 = 85,//XK_KP_6,
        kbNumpad7 = 79,//XK_KP_7,
        kbNumpad8 = 80,//XK_KP_8,
        kbNumpad9 = 81,//XK_KP_9,
        kbNumpad0 = 90,//XK_KP_0,
        kbNumpadAdd = 86,//XK_KP_Add,
        kbNumpadSubtract = 82,//XK_KP_Subtract,
        kbNumpadMultiply = 63,//XK_KP_Multiply,
        kbNumpadDivide = 106,//XK_KP_Divide,
        kbRangeEnd = 0xffff,
        
        msRangeBegin,
        msLeft = msRangeBegin,
        msRight,
        msMiddle,
        msWheelUp,
        msWheelDown,
        msRangeEnd,
        
        gpRangeBegin,
        gpLeft = gpRangeBegin,
        gpRight,
        gpUp,
        gpDown,
        gpButton0,
        gpButton1,
        gpButton2,
        gpButton3,
        gpButton4,
        gpButton5,
        gpButton6,
        gpButton7,
        gpButton8,
        gpButton9,
        gpButton10,
        gpButton11,
        gpButton12,
        gpButton13,
        gpButton14,
        gpButton15,
        gpRangeEnd = gpButton15,
        
        kbNum = kbRangeEnd - kbRangeBegin + 1,
        msNum = msRangeEnd - msRangeBegin + 1,
        gpNum = gpRangeEnd - gpRangeBegin + 1,
        
        numButtons = gpRangeEnd,
        noButton = 0xffffffff
    };
}

#endif

